一. 昨日内容回顾
    1. python是一门解释型 弱类型高级编程语言
    2. 常见的解释器: CPython, Ipython, pypy,Jpython, IronPython
    3. 变量:在程序运行过程中产生的中间值供给后面使用
       命名规范:
          1. 由数字,字母,下划线组成
          2. 不能是数字开头,更不能是纯数字
          3. 不能是关键字(if else elif)
          4. 不要太长
          5. 要有意义
          6. 不要有中文
          7. 区分大小写
          8. 使用驼峰或者下划线
       数据类型:
         int  整数: 加减乘除  //地板除  %取余
         str 字符串:  加 乘
         bool 布尔: True False

       常量: 不存在绝对的常量,所有的字母大写规范为常量
       交互: s = input("提示语")  #默认输入的是字符串

       条件判断: if语句
        if 条件:
            代码块
        条件成立运行代码块

        if 条件:
            代码块
        else:
            代码块

        if 条件:
            代码块
        elif 条件:
            代码块
        elif.....
        else:
            代码块


        嵌套



二. 作业讲解


三. 今日主要内容
    1. 循环

        while 条件:
            代码块(循环体)
            break 彻底停止当前本层循环
            continue 停止当前本次循环 继续执行下一次循环


    2. 格式化输出
        %s 占位字符串
        %d 占位数字

    3. 运算编码符(难点)
        and
        or
        not

        顺序 ()  not  and  or

        x or y
        if x=0 : y  else: x

        and 和 or 相反


编码:
最早的计算机编码是ASCII 有英文+数字+特殊符号  8bite => 1byte  没有中文,后面的编码必须兼容ASCII码
ASCII: 128     用8个0,1来组合  表示1个字节  2**8=256  最多表示256个字符, 第一位始终是0


把中国文字进行编码,对ASCII扩充,16bit   2**16=65535  16bite =>2byte  GBK  国标码的扩展码 主要包含了中文 日文 韩文 英文(兼容ASCII00000000 01000001 )
中文9万多个汉子

UNICODE 32bit 兼容各个国家的编码 万国码 浪费空间  32bite=4byte  2**32=42亿

UTF-8 可变长度的UNICODE ,本质是UNICODE
      英文在UTF-8里面占用1个字节 8bit
      欧洲文字占用2个字节  16bit
      中文占用3个字节     24bit

8bit => 1byte
1024byte = 1kb
1024kb = 1MB
1024MB = 1GB
1024GB = 1TB
1024TB = 1PB

5. in

   判断 xxx是否出现在xxx中


预习:
   字符串